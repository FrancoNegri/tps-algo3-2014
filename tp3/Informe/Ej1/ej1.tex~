\subsection{Introducción}

Para este trabajo practico se nos pide, a partir de un grafo simple $G=(V,E)$ con pesos en las aristas, encontrar la k-particion tal que minimice el peso de las aristas intrapartición.

Para ello primero intentaremos relacionar este problema con otros problemas conocidos, pensaremos varias maneras de abordarlo y emprenderemos la busqueda de algoritmos eficientes para resolverlo.

Como veremos luego, este problema es 'dificil' de resolver, por lo que para instancias grandes, el algoritmo dejará de ser viable, por lo que tambien desarrollaremos distintas heruristicas que resuelvan el problema de manera aproximada. Probaremos con una heuristica golosa, dos heruristicas de busquedas locales y a partir de esotos, un GRASP.

\subsection{Entrada y salida}

Todos los algoritmos tomarán como entrada, lo siguiente:

\begin{itemize}
	\item Un entero \textbf{n} $\rightarrow$ Representará el numero de nodos del grafo $G$.

	\item Un entero \textbf{m} $\rightarrow$ Representará la cantidad de aristas del grafo.

	\item Un entero \textbf{m} $\rightarrow$ Representará la cantidad de conjuntos distintos que disponemos para poner los ejes.

	\item \textbf{m} filas donde, para cada fila $i$ consta de $3$ enteros:
	\begin{itemize}
		\item \textbf{u v w} $ \rightarrow $ donde \textbf{u} y \textbf{v} son los nodos adyacentes y \textbf{w} el peso de las aristas entre ellos.
	\end{itemize}
\end{itemize}

La salida, por su parte, constar\'a de una fila con:

\begin{itemize}

\item $n$ enteros $i_1$ $i_2$ $...$ $i_n$

\end{itemize}

Donde cada $i_k$ representa en que conjunto se encuentra el nodo $k$

\subsection{Ejemplo}

Para ejemplificar el problema a resolver, pensemos en un grafo $G$ con $4$ nodos, $5$ vertices y $2$ particiones.

Supongamos ademas que los nodos estan conectados de la siguiente manera.

$1-2$ con peso $2$
$1-3$ con peso $3$
$1-4$ con peso $3$
$2-4$ con peso $1$
$3-4$ con peso $2$

A primera vista podríamos poner el nodo $1$ separados de los nodos $3$ y $4$ ya que de estar juntos sumarían demaciado a la intrapartición. Por otro lado tenderíamos a poner al nodo $2$ y $3$ dentro de la misma partición ya que estos suman $0$. Como contracara de eso ahora podemos ver que al agregar otro nodo $v$, sumará tanto el peso de $2$ con $v$ y $3$ con $v$. Vemos luego que un algoritmo goloso para intentar resolver este problema puede tomar soluciónes tan malas como se quiera.

Siendo esta una instancia pequeña del problema, tras intentar algunas convinaciones, puede verse que poniendo el nodo $1$ en el primer conjunto y los nodos $2,3,4$ en el otro, se consigue un peso total de $3$.

\subsection{Relación con otros problemas conocidos}

En primer instancia podemos relacionar el problema de $k-PMP$ con el problema de coloreo. Supongamos que podemos encontrar un k-coloreo para los vértices del grafo G, entonces podríamos subdividir al conjunto de vértices V en k subgrupos según su color, es decir, en un mismo grupo sólo habrá vertices que compartan color. Por la definición de coloreo, dos vértices de un mismo color no pueden tener arista entre sí, por lo tanto los grupos que armamos son conjuntos independientes. Esto quiere decir que mi k-partición no tendría aristas intrapartición ya que cada partición sería un conjunto independiente, y entonces el peso total de la misma sería $0$. Y además sería un peso mínimo ya que no hay aristas con peso negativo y entonces tendríamos la solución a nuestro problema. Hasta aquí hemos visto que con un coloreo igual a k se obtiene la solución al problema, pero observemos que los conjuntos de la k-partición resultado no tienen que ser necesariamente no vacíos, lo que nos lleva a pensar que también nos bastaría conseguir un coloreo menor a k para resolver nuestro problema y ahora veremos cómo puede ser esto posible. Dado un k'-coloreo con $k'<k$, por lo dicho anteriormente podemos armarnos k' subgrupos de vértices agrupandolos por color, los cuales serán conjuntos independientes, es decir, no existirán aristas que incidan en dos nodos de un mismo grupo. Sin embargo, ya no me queda ningún vértice para meter en algún grupo y el problema me pide k particiones, por lo que me estarían faltando otras $k-k'$ particiones más que agregar a mi k-partición. Pero si recordamos nuestra observación que decía que las particiones no deben ser necesariamente no vacías, entonces podríamos agregar a nuestra k-partición $k-k'$ particiones de vértices vacías, con lo cual no estaríamos agregando ninguna arista intrapartición. Entonces mis k' particiones iniciales, por lo visto previamente, no tienen ninguna arista intrapartición y los conjuntos vacíos que agregué posteriormente claramente tampoco tienen aristas intrapartición, por lo que he llegado nuevamente a una k-partición de peso $0$, la cual es solución de mi problema y además es óptima.
Por otro lado, dada una solución al problema de k-PMP de peso estrictamente mayor a $0$ para un grafo G determinado, podemos afirmar que no existe un k-coloreo para ese grafo. Si existiera un k-coloreo para dicho grafo, entonces, por lo probado en el anterior párrafo, también existiría una k-PMP de peso $0$ para tal grafo, lo cual es absurdo ya que partimos de una k-PMP de peso estrictamente mayor a $0$.